    type Mentor {
        _id: ID,
        name: String,
        level: Level,
        workDuration: Int,
        salary: Int,
        country: String,
        timestamp: Int,
        techStack: String
    }

    input MentorInput {
        _id: ID,
        name: String,
        level: Level,
        workDuration: Int,
        salary: Int,
        country: String,
        timestamp: Int,
        techStack: String
    }

    input MentorFilter {
        _id: ID,
        name: String,
        level: Level,
        workDuration: Int,
        salary: Int,
        country: String,
        timestamp: Int,
        techStack: String
    }
    input MentorSetFilter {
        name: String,
        level: Level,
        workDuration: Int,
        salary: Int,
        country: String,
        timestamp: Int,
        techStack: String
    }

    input UpdateMentorInput {
        filter: MentorFilter!
        set: MentorSetFilter
    }

    type Query {
        getMentors(input: MentorFilter): [Mentor]
    }


    type Mutation {
        addMentor(input: MentorInput): Mentor
        updateMentors(input: UpdateMentorInput): [Mentor]
        deleteMentors(input: MentorInput): [Mentor]
    }
